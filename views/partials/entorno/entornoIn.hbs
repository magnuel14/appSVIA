{{> entorno/heaEntorno}}
<link rel="stylesheet" href="/style/styles.css">
<main id="main">
    <div class="agile-field-txt">
        {{#if error }}
        <div class="alert alert-danger">{{error}}</div>
        {{/if}}

        {{#if info }}
        <div class="alert alert-primary">{{info}}</div>
        {{/if}}

    </div>

    <input style="display: none;" name="idexte" id="idexte" value="{{externalID}}" readonly />

    <div class="container" style="margin-top: 20px;">

        <div id="success-alert" class="agile-field-txt">
            {{#if error }}
            <div class="alert alert-danger">{{error}}</div>
            {{/if}}

            {{#if info }}
            <div class="alert alert-success">{{info}}</div>
            {{/if}}

        </div>
    </div>

    <div class="container" style="margin-top: 20px;">
        <div class="panel panel-primary">
            <div class="card-header alert-primary" align="center">
                <h3 id="titulo">Safe Group</h3>
            </div>
            <div class="panel-body">
                <div class="table-responsive-xl">
                    <table id="tablagrupos" class="table table-striped">
                        <thead id="cabezera" align="center">
                            <tr align="center">
                                <th scope="col">Nombre del Grupo</th>
                                <th scope="col">Descripci√≥n</th>
                                <th scope="col">Foto</th>
                                <th scope="col">Editar</th>
                                <th scope="col">Eliminar</th>
                                <th scope="col">Agregar foto</th>
                            </tr>
                        </thead>
                        <tbody align="center">

                        </tbody>
                    </table>

                </div>
            </div>

        </div>
    </div>
    <div class="center-content1 page-container1">


        <p> Reference Image: </p>
        <div class="progress" id="loader">
            <div class="indeterminate"></div>
        </div>
        <div style="position: relative" class="margin1">
            <img id="refImg" src="" style="max-width: 800px;" />
            <canvas id="refImgOverlay" class="overlay1" />
        </div>
        <div class="row side-by-side1">

            <!-- image_selection_control -->
            <div class="row">
                <label>Upload Image:</label>
                <div>
                    <input width="720" height="560" value="" id="refImgUploadInput" type="file" class="bold1"
                        onchange="uploadRefImage()" accept=".jpg, .jpeg, .png">
                </div>
            </div>
            <div class="row">
                <label for="refImgUrlInput">Get image from URL:</label>
                <input hidden id="refImgUrlInput" type="text" class="bold1">
            </div>
            <button style="display: none;" class="btn btn-success" onclick="loadRefImageFromUrl()">
                Reconocer de nueva
            </button>
            <!-- image_selection_control -->
        </div>
        <p> Query Image: </p>
        <div style="position: relative" class="margin1">
            <img id="queryImg" src="" style="max-width: 800px;" />
            <canvas id="queryImgOverlay" class="overlay1" />
        </div>
        <div class="row side-by-side1">

            <!-- image_selection_control -->
            <div class="row">
                <label>Upload Image:</label>
                <div>

                    <input width="720" height="560" id="queryImgUploadInput" type="file" class="bold1"
                        onchange="uploadQueryImage()" accept=".jpg, .jpeg, .png">
                </div>
            </div>
            <div class="row">
                <label for="queryImgUrlInput">Get image from URL:</label>
                <input hidden id="queryImgUrlInput" type="text" class="bold1">
            </div>
            <button style="display: none;" class="btn btn-success" onclick="loadQueryImageFromUrl()">
                Reconocer de nueva
            </button>

            <!-- image_selection_control -->
        </div>

        <div style="display: none;" class="center-content1">
            <!-- face_detector_selection_control -->
            <div id="face_detector_selection_control" class="row input-field">
                <select id="selectFaceDetector">
                    <option value="ssd_mobilenetv1">SSD Mobilenet V1</option>
                    <option value="tiny_face_detector">Tiny Face Detector</option>
                </select>
                <label>Select Face Detector</label>
            </div>
            <!-- face_detector_selection_control -->

            <!-- ssd_mobilenetv1_controls -->
            <span id="ssd_mobilenetv1_controls">
                <div class="row side-by-side1">
                    <div class="row">
                        <label for="minConfidence">Min Confidence:</label>
                        <input disabled value="0.5" id="minConfidence" type="text" class="bold1">
                    </div>
                    <button class="waves-effect waves-light btn" onclick="onDecreaseMinConfidence()">
                        <i class="material-icons left">-</i>
                    </button>
                    <button class="waves-effect waves-light btn" onclick="onIncreaseMinConfidence()">
                        <i class="material-icons left">+</i>
                    </button>
                </div>
            </span>
            <!-- ssd_mobilenetv1_controls -->

            <!-- tiny_face_detector_controls -->
            <span id="tiny_face_detector_controls">
                <div class="row side-by-side1">
                    <div class="row input-field" style="margin-right: 20px;">
                        <select id="inputSize">
                            <option value="" disabled selected>Input Size:</option>
                            <option value="160">160 x 160</option>
                            <option value="224">224 x 224</option>
                            <option value="320">320 x 320</option>
                            <option value="416">416 x 416</option>
                            <option value="512">512 x 512</option>
                            <option value="608">608 x 608</option>
                        </select>
                        <label>Input Size</label>
                    </div>
                    <div class="row">
                        <label for="scoreThreshold">Score Threshold:</label>
                        <input disabled value="0.5" id="scoreThreshold" type="text" class="bold1">
                    </div>
                    <button class="waves-effect waves-light btn" onclick="onDecreaseScoreThreshold()">
                        <i class="material-icons left">-</i>
                    </button>
                    <button class="waves-effect waves-light btn" onclick="onIncreaseScoreThreshold()">
                        <i class="material-icons left">+</i>
                    </button>
                </div>
            </span>
            <!-- tiny_face_detector_controls -->
        </div>
        <div class="center-content page-container">

            <div class="progress" id="loader">
                <div class="indeterminate"></div>
            </div>
            <div style="position: relative" class="margin">
                <video onloadedmetadata="onPlay(this)" id="inputVideo" autoplay muted playsinline></video>
                <canvas id="overlay" />
            </div>

            <div style="display: none;" class="row side-by-side">

                <!-- face_detector_selection_control -->
                <div id="face_detector_selection_control" class="row input-field" style="margin-right: 20px;">
                    <select id="selectFaceDetector">
                        <option value="ssd_mobilenetv1">SSD Mobilenet V1</option>
                        <option value="tiny_face_detector">Tiny Face Detector</option>
                    </select>
                    <label>Select Face Detector</label>
                </div>
                <!-- face_detector_selection_control -->

                <!-- fps_meter -->
                <div id="fps_meter" class="row side-by-side">
                    <div>
                        <label for="time">Time:</label>
                        <input disabled value="-" id="time" type="text" class="bold">
                        <label for="fps">Estimated Fps:</label>
                        <input disabled value="-" id="fps" type="text" class="bold">
                    </div>
                </div>
                <!-- fps_meter -->

            </div>


            <!-- ssd_mobilenetv1_controls -->
            <span style="display: none;" id="ssd_mobilenetv1_controls">
                <div class="row side-by-side">
                    <div class="row">
                        <label for="minConfidence1">Min Confidence:</label>
                        <input disabled value="0.5" id="minConfidence1" type="text" class="bold">
                    </div>
                    <button class="waves-effect waves-light btn" onclick="onDecreaseMinConfidence()">
                        <i class="material-icons left">-</i>
                    </button>
                    <button class="waves-effect waves-light btn" onclick="onIncreaseMinConfidence()">
                        <i class="material-icons left">+</i>
                    </button>
                </div>
            </span>
            <!-- ssd_mobilenetv1_controls -->

            <!-- tiny_face_detector_controls -->
            <span style="display: none;" id="tiny_face_detector_controls">
                <div class="row side-by-side">
                    <div class="row input-field" style="margin-right: 20px;">
                        <select id="inputSize">
                            <option value="" disabled selected>Input Size:</option>
                            <option value="128">128 x 128</option>
                            <option value="160">160 x 160</option>
                            <option value="224">224 x 224</option>
                            <option value="320">320 x 320</option>
                            <option value="416">416 x 416</option>
                            <option value="512">512 x 512</option>
                            <option value="608">608 x 608</option>
                        </select>
                        <label>Input Size</label>
                    </div>
                    <div class="row">
                        <label for="scoreThreshold1">Score Threshold:</label>
                        <input disabled value="0.5" id="scoreThreshold1" type="text" class="bold">
                    </div>
                    <button class="waves-effect waves-light btn" onclick="onDecreaseScoreThreshold()">
                        <i class="material-icons left">-</i>
                    </button>
                    <button class="waves-effect waves-light btn" onclick="onIncreaseScoreThreshold()">
                        <i class="material-icons left">+</i>
                    </button>
                </div>
            </span>
            <!-- tiny_face_detector_controls -->
        </div>
        <div id="myModal" class="modal">

            <div style="position:absolute ;top: 0;bottom: 0; background-image: url(/assets/img/fondosform/1.gif) ;background-size: 15%;"
                class="modal-content">
                <center>
                    <span class="close">&times;</span>
                    <div class="agile-field-txt">
                        {{#if error }}
                        <div class="alert alert-danger">{{error}}</div>
                        {{/if}}

                        {{#if info }}
                        <div class="alert alert-primary">{{info}}</div>
                        {{/if}}

                    </div>
                    <form id="formulario_grupoEn" method="POST" action="/crear_grupoEn">
                        <div class="bg-dark" style="background-color:  #040b14e7;">
                            <h1 class="text-light">Crea tu grupo de usuarios</h1>
                        </div>
                        <div class="form-group">
                            <label for="name"><i class="zmdi zmdi-account material-icons-name"></i></label>
                            <input type="text" style="display: none;" name="enID" id="enID" value="{{externalID}}"
                                required />
                        </div>
                        <div class="form-group">
                            <label for="name"><i class="zmdi zmdi-account material-icons-name"></i></label>
                            <input type="text" name="nombreG" id="nombreG" title="Nombre del grupo"
                                placeholder="Nombre del grupo" required />
                        </div>
                        <div class="form-group">
                            <label for="name"><i class="zmdi zmdi-account material-icons-name"></i></label>
                            <input type="text" name="descripcion" id="descripcion" placeholder="Descripcion del grupo"
                                title="Descripcion del grupo" required />
                        </div>
                        <div class="form-group">
                            <label for="name"><i class="zmdi zmdi-account material-icons-name"></i></label>
                            <input type="text" name="foto" id="foto" style="display: none;" value="sin foto" required />
                        </div>
                        <div class="w3ls-login  w3l-sub">

                            <input type="submit" name="signin" style="margin: 3px" class="btn btn-primary"
                                value="Crear grupo" />
                        </div>
                    </form>
                </center>
            </div>
        </div>
</main>

<script>
    let faceMatcher = null

    async function uploadRefImage(e) {
        const imgFile = $('#refImgUploadInput').get(0).files[0]
        const img = await faceapi.bufferToImage(imgFile)
        $('#refImg').get(0).src = img.src
        updateReferenceImageResults()
    }

    async function loadRefImageFromUrl(url) {
        const img = await requestExternalImage($('#refImgUrlInput').val())
        $('#refImg').get(0).src = img.src
        updateReferenceImageResults()
    }

    async function uploadQueryImage(e) {
        const imgFile = $('#queryImgUploadInput').get(0).files[0]
        const img = await faceapi.bufferToImage(imgFile)
        $('#queryImg').get(0).src = img.src
        updateQueryImageResults()
    }

    async function loadQueryImageFromUrl(url) {
        const img = await requestExternalImage($('#queryImgUrlInput').val())
        $('#queryImg').get(0).src = img.src
        updateQueryImageResults()
    }

    async function updateReferenceImageResults() {
        const inputImgEl = $('#refImg').get(0)
        const canvas = $('#refImgOverlay').get(0)

        const fullFaceDescriptions = await faceapi
            .detectAllFaces(inputImgEl, getFaceDetectorOptions())
            .withFaceLandmarks()
            .withFaceDescriptors()

        if (!fullFaceDescriptions.length) {
            return
        }

        // crea FaceMatcher con etiquetas asignadas autom√°ticamente
        // a partir de los resultados de detecci√≥n de la imagen de referencia
        faceMatcher = new faceapi.FaceMatcher(fullFaceDescriptions)

        faceapi.matchDimensions(canvas, inputImgEl)
        // cambiar el tama√±o de la detecci√≥n y los puntos de referencia en caso de que la imagen mostrada sea m√°s peque√±a que
        // tama√±o original
        const resizedResults = faceapi.resizeResults(fullFaceDescriptions, inputImgEl)
        // dibuja un recuadro con la etiqueta correpondiente en texto
        const labels = faceMatcher.labeledDescriptors
            .map(ld => ld.label)
        resizedResults.forEach(({ detection, descriptor }) => {
            const label = faceMatcher.findBestMatch(descriptor).toString()
            const options = { label }
            const drawBox = new faceapi.draw.DrawBox(detection.box, options)
            drawBox.draw(canvas)
        })
    }

    async function updateQueryImageResults() {
        if (!faceMatcher) {
            return
        }

        const inputImgEl = $('#queryImg').get(0)
        const canvas = $('#queryImgOverlay').get(0)

        const results = await faceapi
            .detectAllFaces(inputImgEl, getFaceDetectorOptions())
            .withFaceLandmarks()
            .withFaceDescriptors()

        faceapi.matchDimensions(canvas, inputImgEl)
        // cambiar el tama√±o de la detecci√≥n y los puntos de 
        //referencia en caso de que la imagen mostrada sea m√°s peque√±a que
        // tama√±o original
        const resizedResults = faceapi.resizeResults(results, inputImgEl)

        resizedResults.forEach(({ detection, descriptor }) => {
            const label = faceMatcher.findBestMatch(descriptor).toString()
            const options = { label }
            const drawBox = new faceapi.draw.DrawBox(detection.box, options)
            drawBox.draw(canvas)
        })
    }



    async function run() {
        // carga la deteccion facial, 
        // load face detection, modelo de referencia facial y modelos de reconocimiento facial
        await changeFaceDetector(selectedFaceDetector)
        await faceapi.loadFaceLandmarkModel('/')
        await faceapi.loadFaceRecognitionModel('/')
    }
    async function updateResults() {
        await updateReferenceImageResults()
        await updateQueryImageResults()
    }

    $(document).ready(function () {
        renderNavBar('#main', 'face_recognition')
        initFaceDetectionControls()
        run()
    })
</script>
<!-- Funcion para aprecer el modal de crear el grupo -->
<script>
    // Get the modal
    var modal = document.getElementById("myModal");

    // Get the button that opens the modal
    var btn = document.getElementById("myBtn");

    // Get the <span> element that closes the modal
    var span = document.getElementsByClassName("close")[0];

    // When the user clicks on the button, open the modal
    btn.onclick = function () {
        modal.style.display = "block";
    }

    // When the user clicks on <span> (x), close the modal
    span.onclick = function () {
        modal.style.display = "none";
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }
</script>
<!-- Estilo del modal -->
<style>
    /* The Modal (background) */
    .modal {
        display: none;
        /* Hidden by default */
        position: fixed;
        /* Stay in place */
        z-index: 1;
        /* Sit on top */
        left: 0;
        top: 0;
        width: 100%;
        /* Full width */
        height: 100%;
        /* Full height */
        overflow: auto;
        /* Enable scroll if needed */
        background-color: rgb(0, 0, 0);
        /* Fallback color */
        background-color: rgba(0, 0, 0, 0.4);
        /* Black w/ opacity */

    }

    /* Modal Content/Box */
    .modal-content {
        background-color: #fefefe;
        margin: 15% 25%;
        /* 15% from the top and centered */
        padding: 20px;
        border: 3px solid #888;
        width: 70%;
    }

    /* The Close Button */
    .close {
        color: black;
        float: left;
        font-size: 28px;
        font-weight: bold;
    }

    .close:hover,
    .close:focus {
        color: red;
        text-decoration: none;
        cursor: pointer;
    }
</style>
<script>

    function buscarG(id) {
        var url = "http://localhost:8060/cargar_grupoEn";

        $.ajax({
            url: url,
            data: 'id=' + id,
            success: function (data, textStatus, jqXHR) {
                var externalEn = document.getElementById('idexte').value;
                var html = '';
                $.each(data, function (index, item) {
                    console.log(data);
                    console.log(externalEn);

                    html += '<tr>';
                    html += '<td>' + item.nombre + '</td>';
                    html += '<td>' + item.descripcion + '</td>';
                    html += '<td>';
                    html += '<img style="width:150px !important; height:175px !important" src = "/images/personasEn/'+item.foto+'" >';
                    html += '</td>';
                    html += '<td>' + '<a href="/cargar_grupoModi/' + item.external_id + '" class="btn btn-success" name="">Editar</a>' + '</td>';
                    html += '<td>' + '<a href="/eliminar_grupo/' + item.external_id + '/' + externalEn + '" class="btn btn-danger"> Eliminar </a>' + '</td>';
                    html += '<td>';
                    html += '<form id="formularioFoto" enctype="multipart/form-data" method="POST" action="/grupo_Foto/' + item.external_id + '/' + externalEn + '">';
                    html += '<div class="form-group">';
                    html += '<input type="" style="display: none;" name="" id="" value="' + item.external_id + '"  form-control" >';
                    html += '</div>';
                    html += '<div class="form-group">';
                    html += '<input type="file" id="archivo" name="archivo" /><br>';
                    html += '<div class="modal-footer d-flex justify-content-center">';
                    html += '<div class="form-group">';
                    html += '<input type="submit" class="btn btn-warning" value="Subir foto" />';
                    html += '</div>';
                    html += '</div>';
                    html += '</div >';
                    html += '</form >';
                    html += '</tr>';
                });
                $("#tablagrupos tbody").html(html);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                // console.log(jqXHR.responseText);
            }
        });
    }
    $(document).ready(function () {
        var esternalU = '';
        var id = $("#iden").val();
        console.log(id);
        buscarG(id);
    });
</script>